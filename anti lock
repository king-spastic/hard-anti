local Settings = {
    Enable = false,
    VelocityX = 0,
    VelocityY = 0,
    VelocityZ = 0,
    Breakprediction = false,
    BlatantAntiAim = {
        Desync = true,
        Confuse = false,
        Slingshot = false,
        Rage = false,
        Semirage = false,
        Fakelag = false,
    }
}

local Jit = math.random(30, 90)
local Angle = 60
    
local Position = game.Players.LocalPlayer.Character.HumanoidRootPart.Position

local RunService = game:GetService("RunService")
local PlayersService = game:GetService("Players")
local LocalPlayer = PlayersService.LocalPlayer
local rs = nil

Drawing = Drawing
local VelocityGui = Drawing.new("Text")
VelocityGui.Visible = true
VelocityGui.Size = 25
VelocityGui.Outline = true
VelocityGui.Color = Color3.new(1, 1, 1)
VelocityGui.Position = Vector2.new(10, game:GetService("GuiService"):GetScreenResolution().Y - -1)
VelocityGui.Text = "Velocity: (0, 0, 0)"

function ShowVelocityOf(User)
  local Velocity = User.Character:FindFirstChild("HumanoidRootPart").AssemblyLinearVelocity
  VelocityGui.Text = "Velocity: (" .. math.floor(Velocity.X) .. ", " .. math.floor(Velocity.Y) .. ", " .. math.floor(Velocity.Z) .. ")"
end

rs = RunService.Heartbeat:Connect(function()
    pcall(function()
        ShowVelocityOf(LocalPlayer)
    end)
end)

local remotes = {
    "CHECKER_1",
    "CHECKER_2",
    "TeleportDetect",
    "OneMoreTime",
    "BreathingHAMON",
    "VirusCough",
}
local __namecall
__namecall = hookmetamethod(game, "__namecall", function(...)
    local args = {...}
    local method = getnamecallmethod()
    if (method == "FireServer" and args[1].Name == "MainEvent" and table.find(remotes, args[2])) then
        return
    end
    return __namecall(table.unpack(args))
end)

_G.method = "MousePos"

if game.PlaceId == 2788229376 then
    _G.method = "MousePos"
end

local rs = game:GetService("RunService")
local localPlayer = game.Players.LocalPlayer
local mouse = localPlayer:GetMouse()
local target;

function get_closet()
    local a = math.huge
    local b;
    for i, v in pairs(game.Players:GetPlayers()) do
        if v ~= localPlayer and v.Character and v.Character:FindFirstChild("Head") and  v.Character:FindFirstChild("HumanoidRootPart")  then
            local c = game.Workspace.CurrentCamera:WorldToViewportPoint(v.Character.PrimaryPart.Position)
            local d = (Vector2.new(mouse.X, mouse.Y) - Vector2.new(c.X, c.Y)).Magnitude

            if a > d then
                b = v
                a = d
            end
        end
    end

    return b
end
local a = Instance.new("Beam")

a.Segments = 1;
a.FaceCamera = true;
local b = Instance.new("Attachment")
local c = Instance.new("Attachment")
a.Attachment0 = b;
a.Attachment1 = c;
a.Parent = workspace.Terrain;
b.Parent = workspace.Terrain;
c.Parent = workspace.Terrain;

mouse.KeyDown:Connect(function(z)
    if z == _G.swith_nigga then
        target = get_closet()
    end
end)

task.spawn(function()
    rs.RenderStepped:Connect(function()
 
    local character = localPlayer.Character
        if not character then
        a.Enabled = false
        return
    end
    if _G.enable and target.Character:FindFirstChild("BodyEffects") and target.Character:FindFirstChild("RightHand") then
        a.Enabled = true
        b.Position =  target.Character:FindFirstChild("RightHand").Position
        c.Position = target.Character.BodyEffects[_G.method].Value
    else
        a.Enabled = false
    end

    end)
end)

function NotificationON()
    game.StarterGui:SetCore("SendNotification",  {
        Title = "renpy.aa";
        Text = "Anti Lock: Enable";
        Icon = "";
        Duration = 1;
       })
end

function NotificationOFF()
    game.StarterGui:SetCore("SendNotification",  {
        Title = "renpy.aa";
        Text = "Anti Lock: Disable";
        Icon = "";
        Duration = 1;
       })
end

game:GetService("RunService").Heartbeat:Connect(function()

    if Settings.BlatantAntiAim.Fakelag == true then
        game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.Anchored = true
        wait(0.2)
        game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.Anchored = false
    end

    if Settings.Enable == true then
        local CurrentVelocity = game.Players.LocalPlayer.Character.HumanoidRootPart.Velocity
        game.Players.LocalPlayer.Character.HumanoidRootPart.Velocity = Vector3.new(Settings.VelocityX, Settings.VelocityY, Settings.VelocityZ)
        game.RunService.RenderStepped:Wait()
        game.Players.LocalPlayer.Character.HumanoidRootPart.Velocity = CurrentVelocity
    end

    if Settings.BlatantAntiAim.Desync == true then
        local CurrentVelocity = game.Players.LocalPlayer.Character.HumanoidRootPart.Velocity

            game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame * CFrame.Angles(0, math.rad(0), 0)
            game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame * CFrame.Angles(0, math.rad(0.01), 0)
            game.Players.LocalPlayer.Character.HumanoidRootPart.AssemblyLinearVelocity = Vector3.new(math.random(5000), math.random(5000), math.random(5000))
            game.RunService.RenderStepped:Wait()
            game.Players.LocalPlayer.Character.HumanoidRootPart.Velocity = CurrentVelocity
    end

    if Settings.Breakprediction == true then
        local CurrentVelocity = game.Players.LocalPlayer.Character.HumanoidRootPart.Velocity
        game.Players.LocalPlayer.Character.HumanoidRootPart.Velocity = Vector3.new(-0,-0,-0)
        game.RunService.RenderStepped:Wait()
        game.Players.LocalPlayer.Character.HumanoidRootPart.Velocity = CurrentVelocity
    end

    if Settings.BlatantAntiAim.Confuse == true then
        game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame * CFrame.new(1.5,0,0)
        wait()
        game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame * CFrame.new(-1.5,0,0)
        wait()
        game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame * CFrame.new(0,1.5,0)
        wait()
        game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame * CFrame.new(0,-1.5,0)
        wait()
        game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame * CFrame.new(0,0,1.5)
        wait()
        game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame * CFrame.new(0,0,-1.5)
        wait()
    end

    if Settings.BlatantAntiAim.Slingshot == true then
        game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame * CFrame.new(0, 0.999, 0)
    end

    if Settings.BlatantAntiAim.Rage == true then
        game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = (CFrame.new(Position) + Vector3.new(math.random(-10, 10), math.random(-5, 5), math.random(-8, 8))) * CFrame.Angles(math.rad(math.random(-100, 100)), math.rad(math.random(-50, 50)), math.rad(math.random(-80, 80)))
    end

    if Settings.BlatantAntiAim.Semirage == true then
        game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = (CFrame.new(Position) + Vector3.new(math.random(-5, 1), math.random(-5, 1), math.random(-5, 1))) * CFrame.Angles(math.rad(math.random(-5, 1)), math.rad(math.random(-5, 1)), math.rad(math.random(-5, 1)))
    end

end)

local library = loadstring(game:HttpGet("https://raw.githubusercontent.com/ZANDRAMeow/pepsi/main/UI/library/source.lua"))()
local Wait = library.subs.Wait

local main = library:CreateWindow({Name = "renpy.aa | renpy !#8410", Themeable = {Info = "Making Discord soon"}})

local AntiAimTab = main:CreateTab({Name = "| Main |"})

local AntiAimSettings = AntiAimTab:CreateSection({Name = "Settings"})
local BlatantAnti_Aim = AntiAimTab:CreateSection({Name = "Blatant Anti Aim",Side = "left"})
local AimViewerSec = AntiAimTab:CreateSection({Name = "Aim Viewer",Side = "right"})

AimViewerSec:AddToggle({
    Name = "Enable Aim Viewer",
    Callback = function(e)
        _G.enable = e
    end
})

AimViewerSec:AddColorpicker({
    Name = "Beam Color",
	Value = Color3.fromRGB(255,255,255),
    Callback = function(e)
        a.Color = ColorSequence.new(e)
    end
})

AimViewerSec:AddTextbox({
    Name = "Keybind",
    Placeholder = "Enter keybind",
    Value = "k",
    Callback = function(e)
        _G.swith_nigga = e
    end
})

AimViewerSec:AddSlider({
    Name = "Width 0",
    Value = 0.2,
    Min = 0,
    Max = 1,
    Callback = function(value)
        a.Width0 = value
    end
})

AimViewerSec:AddSlider({
    Name = "Width 1",
    Value = 0.2,
    Min = 0,
    Max = 1,
    Callback = function(value)
        a.Width1 = value
    end
})

BlatantAnti_Aim:AddToggle({
    Name = "Desync",
    Callback = function(e)
        Settings.BlatantAntiAim.Desync = e
    end
})

BlatantAnti_Aim:AddToggle({
    Name = "Confuse",
    Callback = function(e)
        Settings.BlatantAntiAim.Confuse = e
    end
})

BlatantAnti_Aim:AddToggle({
    Name = "Slingshot",
    Callback = function(e)
        Settings.BlatantAntiAim.Slingshot = e
    end
})

BlatantAnti_Aim:AddToggle({
    Name = "Rage",
    Callback = function(e)
        Settings.BlatantAntiAim.Rage = e
    end
})

BlatantAnti_Aim:AddToggle({
    Name = "Semi Rage",
    Callback = function(e)
        Settings.BlatantAntiAim.Semirage = e
    end
})

BlatantAnti_Aim:AddToggle({
    Name = "Break Prediction",
    Callback = function(e)
        Settings.Breakprediction = e
    end
})

BlatantAnti_Aim:AddToggle({
    Name = "Fake Lag",
    Callback = function(e)
        Settings.BlatantAntiAim.Fakelag = e
    end
})

getgenv().Notify = false

AntiAimSettings:AddToggle({
    Name = "Enable Anti Aim",
    Keybind = 2,
    Callback = function(e)
        Settings.Enable = e

        if getgenv().Notify == true and Settings.Enable == true then
            NotificationON()
        end

        if getgenv().Notify == true and Settings.Enable == false  then
            NotificationOFF()
        end
    end
})

AntiAimSettings:AddToggle({
    Name = "Enable Notification",
    Callback = function(e)
        getgenv().Notify = e
    end
})

AntiAimSettings:AddSlider({
    Name = "Velocity X",
    Value = 0,
    Min = -16000,
    Max = 16000,
    Textbox = true,
    Callback = function(value)
        Settings.VelocityX = value
    end
})

AntiAimSettings:AddSlider({
    Name = "Velocity Y",
    Value = 0,
    Min = -16000,
    Max = 16000,
    Textbox = true,
    Callback = function(value)
        Settings.VelocityY = value
    end
})

AntiAimSettings:AddSlider({
    Name = "Velocity Z",
    Value = 0,
    Min = -16000,
    Max = 16000,
    Textbox = true,
    Callback = function(value)
        Settings.VelocityZ = value
    end
})
